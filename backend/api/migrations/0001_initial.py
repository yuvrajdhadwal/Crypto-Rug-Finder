# Generated by Django 5.1.6 on 2025-02-23 05:21

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CryptoTokenSentiment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_token', models.CharField(max_length=100)),
                ('overall_title_sentiment_value', models.FloatField()),
                ('overall_text_sentiment_value', models.FloatField()),
                ('overall_comment_sentiment_value', models.FloatField()),
                ('overall_sentiment_value', models.FloatField()),
                ('overall_title_sentiment', models.CharField(max_length=100)),
                ('overall_text_sentiment', models.CharField(max_length=100)),
                ('overall_comment_sentiment', models.CharField(max_length=100)),
                ('overall_sentiment', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CryptoTokenSpam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_token', models.CharField(max_length=100)),
                ('post_spam', models.FloatField()),
                ('comment_spam', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('current_price', models.FloatField()),
                ('total_volume', models.FloatField()),
                ('market_cap', models.FloatField()),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RedditPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crypto_token', models.CharField(max_length=100)),
                ('subreddit', models.CharField(max_length=100)),
                ('title', models.TextField()),
                ('text', models.TextField(blank=True, null=True)),
                ('post_author', models.CharField(blank=True, max_length=100, null=True)),
                ('upvotes', models.IntegerField()),
                ('comments_count', models.IntegerField()),
                ('url', models.URLField(unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='RedditComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=100)),
                ('text', models.TextField()),
                ('upvotes', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='api.redditpost')),
            ],
        ),
    ]
